buildscript {
	ext {
		kotlinVersion = '1.1.3'
		springBootVersion = '2.0.0.M2'
		junitPlatformVersion = '1.0.0-M4'
		junitJupiterVersion = '5.0.0-M4'
		junitVintageVersion = '4.12.0-M2'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.junit.platform:junit-platform-gradle-plugin:${junitPlatformVersion}")

	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}





dependencies {

	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"

	// Spring Dependencies
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile("org.springframework.boot:spring-boot-starter-web") {
		exclude module: "spring-boot-starter-tomcat"
	}
	compile "org.springframework.boot:spring-boot-starter-jetty"
	compile "org.springframework.boot:spring-boot-starter-actuator"


    // Jackson Dependencies
	compile "com.fasterxml.jackson.core:jackson-annotations"
	compile "com.fasterxml.jackson.core:jackson-core"
	compile "com.fasterxml.jackson.core:jackson-databind"
	runtime "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
	runtime "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
	runtime "com.fasterxml.jackson.module:jackson-module-kotlin"

	testCompile('org.springframework.boot:spring-boot-starter-test')

	// JUnit Jupiter API
	testCompile("org.junit.jupiter:junit-jupiter-api:${ junitJupiterVersion}")
	testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")

	// Spring extension for JUnit5
	testCompile fileTree(dir: 'libs', include: '*.jar')

	// TestEngine implementations (only needed at runtime)
	testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")    //JUnit5

}
